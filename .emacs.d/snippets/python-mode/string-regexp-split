# -*- coding: utf-8; mode: snippet -*-
# name: string-regexp-split (正規表現(regular expression)による分割, )
# --
# import re が必要
${1:str_list} = re.split(${2:r"\d+"}, ${3:"ab01ef23gf"})
# $1 = re.split($2, $3, 3)  # 最大分割回数を指定することもできる (最大3回まで分割)
# $1 = re.split(r"(\d+)", $3)  # キャプチャ用の括弧がある場合, キャプチャ結果も結果のリストに入る (分割された文字列, キャプチャ結果, 次の分割された文字列, ... の順)

# 備考: 正規表現文字列は, 先頭に 'r' をつけて raw string にするのを推奨.
#       ('\' を無駄にたくさん書かなくて良くなるため)

# 備考: 一度コンパイルして実行することもできる. 何度も使うならこちらのほうが得.
#       (コンパイル後のパターンオブジェクトには同じ名前のメソッドが使える.
#       match(), search(), findall(), sub() 等)
#   num = re.compile($2)
#   $1 = num.split($3)

# オプション引数で, 挙動を微調整することも可能.
#   x = re.split(p, s,  re.IGNORECASE)
# 
# * MULTILINE, M 	
#   ^ や $ に作用して、複数行にマッチング
# * DOTALL, S 	
#   '.' が「改行を含む任意の文字」にマッチ
# * VERBOSE, X 	
#   冗長な正規表現を利用できるようにする (よりきれいで理解しやすくまとめることができます)
# * IGNORECASE, I 	
#   大文字小文字を区別しないマッチ
# * LOCALE, L 	
#   ロケールに対応したマッチ
# * UNICODE, U 	
#   \w, \W, \b, そして \B を Unicode 文字データベースに依存させます