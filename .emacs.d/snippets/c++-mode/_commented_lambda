# -*- coding: utf-8; mode: snippet -*-
# name: _commented_lambda
# key: _commented_lambda
# --
auto ${7:fun} = 
[${1:=}](${2:int} ${3:x}, ${4:int} ${5:y}) -> ${6:int} {
  return x+y+n;
};

// ラムダ関数の型はコンパイラ依存であり、明示的に記述することはできない。
// * auto キーワードを使ってラムダ関数をローカル変数に格納することはできる。
// * ラムダ関数を引数として取得したい場合は、その型をテンプレート型にするか、std::function などの型消去の仕組みを使う必要がある。
//   void higher_func(std::function<void(std::string)> lambda) {
//     lambda("Hello World!!");
//   };

// ラムダ関数の内容が "return 式" の形式である場合には、戻り値型を省略することができる。
// 戻り値型が void の場合も戻り値型を省略できる。

// [ ]の中には次のような指定が可能である。
// * []        //ラムダ関数外のどの変数も使うことができない。
// * [x, &y]   //xはコピーされる。yは参照渡しされる。
// * [&]       //すべての外部変数は、もし使われれば暗黙的に参照渡しされる。
// * [=]       //すべての外部変数は、もし使われれば暗黙的にコピーされる。
// * [&, x]    //xは明示的にコピーされる。その他の変数は参照渡しされる。
// * [=, &z]   //zは明示的に参照渡しされる。その他の変数はコピーされる。