# -*- coding: utf-8; mode: snippet -*-
# name: _commented_algorithm_permutation!
# key: _commented_algorithm_permutation!
# --
// 辞書式で小さいものから順に辿る. 大きい順で辿りたい場合は prev_permutation().
// (計算量には注意. 階乗になるので N=10 で 300万(= 3秒程度?)くらいになる. このループの中で重いことをしないように)
// (なお, 同じ値の要素が複数入っていると(= 値が重複していると), それらは同一と見なされて生成される数が少なくなる (例えば ["a", "a"] の場合は, この 1つしか生成されない).
//  これが嫌な場合は, 下のように indexの配列を作ってその permutation を取る方がいい)

// vector<T> ${1:vv}; // 処理対象のコンテナ. 予め要素を入れておくこと
vector<int> ${2:perm}($1.size());  iota($2.begin(), $2.end(), 0);  // $2=[0, ..., $1.size()]  // index 用の配列
do {
  $0   // $1 を使った処理. なお permutation後のi番目の要素には $1[$2[i]] でアクセス可.
} while (next_permutation ($2.begin(), $2.end()));
